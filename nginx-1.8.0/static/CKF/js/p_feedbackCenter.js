var CKF = require('./CKF.js');
require('../less/feedback-center.less');
// other dependencies ...

var getCookie = require('./getCookie.js');
var lang = getCookie('language');

require('bootstrap/js/alert.js');
require('bootstrap/js/modal.js');
// summernote
require('bootstrap/js/tooltip.js');
require('font-awesome/less/font-awesome.less');
require('summernote/dist/summernote.css');
require('imports?define=>false!summernote/dist/summernote.js');
// form validation
require('../css/formValidation.min.css');
require('./libs/FV/formValidation.min.js');
require('./libs/FV/bootstrap.min.js');



module.exports = (function () {
    var moduleName = 'feedbackCenter';
    var module = CKF.create(moduleName,true);

    return {
        init: function () {
            var feedbackForm = module.find('#f-feedback-form');
    
            feedbackForm.formValidation({
                framework: 'bootstrap',               
                excluded: [':disabled'],
                icon: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    'f-feedback-email': {
                        selector: '.f-feedback-email',
                        validators: {
                            notEmpty: {
                                message: __('The account is required')                              
                            }
                        }
                    },
                    'f-feedback-title': {
                        selector: '.f-feedback-title',
                        validators: {
                            notEmpty: {
                                message:__('The title is required')                                
                            },
                            stringLength: {
                                min: 6,
                                message: __('The title must be more than 6 characters long')
                            }
                        }
                    },
                    'f-feedback-content': {
                        selector: '.f-feedback-content',
                        validators: {
                           /* stringLength: {
                                max: 200,
                                message: {
                                    en_US: 'The content must be less than 200 characters long',
                                    zh_CN: '内容不能超过200个字符长度'
                                }
                            },*/
                            callback: {
                                message:__('The content is required and cannot be empty'),
                                callback: function(value, validator, $field) {
                                    var code = $('.f-feedback-content').code();
                                    // <p><br></p> is code generated by Summernote for empty content
                                    return (code !== '' && code !== '<p><br></p>');
                                }
                            }
                        }
                    }
                }
            }).find('.f-feedback-content')
                .summernote({
                    height: 200                // set editor height
                })
                .on('summernote.change', function(customEvent, contents, $editable) {
                    // Revalidate the content when its value is changed by Summernote
                    $('#f-feedback-form').formValidation('revalidateField', 'f-feedback-content');
                })
                .end()
                .on('success.form.fv', function(e) {
		            // Prevent form submission
		            e.preventDefault();
		            
		            var $form = $(e.target),
		                fv    = $form.data('formValidation');
		
		            // Use Ajax to submit form data
		            $.ajax({
		                url: '/cooka-user-web/addFeedback',
		                type: 'POST',
		                data: $form.serialize(),
		                success: function(result) {
		                	if (result === "success") 
    	        				  $('#feedback-center-modal').modal('show');      
		                }
		            });
                })
                 .on('err.validator.fv', function(e, data) {
                    data.element
                        .data('fv.messages')
                        .find('.help-block[data-fv-for="' + data.field + '"]').hide()
                        .filter('[data-fv-validator="' + data.validator + '"]').show();
                });
           
           
        }
    };
})();